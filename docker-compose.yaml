services:
  postgres:
    image: postgres:18
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: masterbase
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d  
    networks:
      - nginx-network

  backend:
    build:
      context: ./backend
      dockerfile: ./deployments/serv1/serv1.dockerfile
      args:
        - GO_VERSION=1.24
    container_name: backend_srv
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - nginx-network
    volumes:
      - ./log/backend:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_srv
    depends_on: 
      - backend
    networks:
      - nginx-network
    ports:
      - "3000:3000"
    volumes:
      - ./log/frontend:/app/logs
  
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/configs:/etc/nginx/conf.d:ro
      - ./frontend:/usr/share/nginx/public:ro  
      - ./log/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - nginx-network
    depends_on:
      - backend
      - frontend

networks:
  nginx-network:
    driver: bridge

volumes:
  postgres_data:
  
